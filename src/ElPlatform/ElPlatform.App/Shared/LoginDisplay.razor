@inject Blazored.LocalStorage.ILocalStorageService Storage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@using System.Security.Claims
<AuthorizeView>
    <Authorized>
        <MudMenu Icon="@Icons.Material.Filled.Person" Color="Color.Primary" Direction="Direction.Right" OffsetY="true">
            <MudMenuItem>@context.User.FindFirst(ClaimTypes.GivenName).Value</MudMenuItem>
            <MudMenuItem>My account</MudMenuItem>
            <MudMenuItem OnClick="LogOutAsync">Logout</MudMenuItem>
        </MudMenu>
    </Authorized>
    <NotAuthorized>
        <MudIconButton Icon="@Icons.Material.Filled.Login" Color="Color.Secondary" OnClick='()=>Navigation.NavigateTo("/auth/login")' />
    </NotAuthorized>
</AuthorizeView>

@code {

    private async Task LogOutAsync()
    {
        await Storage.RemoveItemAsync("access_token");
        await Storage.RemoveItemAsync("expiry_date");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        Navigation.NavigateTo("/auth/login");
    }
}
